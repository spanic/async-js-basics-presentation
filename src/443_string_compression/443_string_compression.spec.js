import compress from './443_string_compression';

describe('compresses given string and returns the new array length', () => {
    test.each([
        { input: ['a', 'a', 'b', 'b', 'c', 'c', 'c'], expected: 6 },
        { input: ['a'], expected: 1 },
        {
            input: [
                'a',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
                'b',
            ],
            expected: 4,
        },
        {
            input: [
                'b',
                'l',
                'l',
                'l',
                'l',
                'l',
                'l',
                '4',
                '4',
                'W',
                'W',
                '&',
                'd',
                'd',
                'd',
                '@',
                'D',
                'D',
                '.',
                '.',
                '.',
                '8',
                '8',
                '8',
                'U',
                'V',
                '>',
                'J',
                'J',
                'k',
                'H',
                'H',
                '=',
                'l',
                '[',
                '[',
                '[',
                '[',
                '[',
                '[',
                '[',
                'a',
                'a',
                "'",
                '<',
                '[',
                '[',
                'y',
                'V',
                'l',
                'l',
                "'",
                '$',
                'E',
                '`',
                'v',
                'k',
                'E',
                'E',
                't',
                't',
                't',
                't',
                't',
                '=',
                '=',
                '0',
                'C',
                'a',
                'l',
                'l',
                'l',
                'r',
                'R',
                'M',
                'M',
                'c',
                'c',
                'c',
                'A',
                'A',
                'S',
                '9',
                '9',
                '9',
                '9',
                ')',
                ')',
                '\\',
                's',
                '\\',
                '\\',
                'y',
                'W',
                'W',
                'W',
                'J',
                'J',
                'J',
                'J',
                '6',
                '6',
                '<',
                '<',
                'E',
                'u',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                '9',
                '9',
                '9',
                '9',
                'R',
                '8',
                '?',
                'F',
                '3',
                '&',
                '&',
                '&',
                '&',
                'f',
                '%',
                '%',
                '2',
                '2',
                '2',
                ')',
                ')',
                ')',
                'J',
                'p',
                '|',
                'D',
                'D',
                'D',
                's',
                't',
                'V',
                'V',
                '?',
                '^',
                '^',
                'S',
                '3',
                '3',
                '3',
                '3',
                'h',
                '*',
                '|',
                '|',
                'b',
                'b',
                'a',
                'a',
                'a',
                'r',
                'r',
                'r',
                'r',
                'J',
                '.',
                '^',
                '^',
                '~',
                'g',
                ':',
                ':',
                ':',
                '(',
                '4',
                '4',
                '4',
                '4',
                'w',
                'w',
                'w',
                'w',
                'w',
                'w',
                'w',
                'C',
                '?',
                '=',
                'd',
                'L',
                ':',
                '0',
                '0',
                'c',
                'w',
                'w',
                'w',
                'w',
                'w',
                'w',
                '{',
                '{',
                't',
                'k',
                'k',
                'k',
                '&',
                '&',
                '&',
                'h',
                'j',
                'j',
                'j',
                '0',
                '3',
                'l',
                ';',
                ';',
                ';',
                ';',
                ';',
                '.',
                '.',
                '.',
                '%',
                '1',
                '1',
                '1',
                'l',
                '9',
                '?',
                '?',
                '?',
                't',
                '>',
                'E',
                'N',
                'N',
                '@',
                '>',
                '.',
                '.',
                'I',
                'a',
                'a',
                'a',
                'a',
                'B',
                '7',
                '7',
                '{',
                'o',
                'o',
                '-',
                '+',
                '+',
                '+',
                '+',
                'o',
                'o',
                '}',
                'B',
                'B',
                'r',
                'r',
                'r',
                'q',
                '4',
                '4',
                '4',
                '9',
                'W',
                'W',
                'W',
                'W',
                'W',
                "'",
                "'",
                "'",
                'g',
                'J',
                '(',
                '(',
                '(',
                '(',
                't',
                't',
                '?',
                ';',
                'g',
                'g',
                'g',
                '0',
                ']',
                ']',
                ']',
            ],
            expected: 224,
        },
        {
            input: [
                'E',
                'u',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                'e',
                '9',
                '9',
                '9',
                '9',
            ],
            expected: 6,
        },
    ])('$input ➡️ $expected', ({ input, expected }) => {
        expect(compress(input)).toBe(expected);
    });
});
